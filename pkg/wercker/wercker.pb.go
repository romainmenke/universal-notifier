// Code generated by protoc-gen-go.
// source: wercker.proto
// DO NOT EDIT!

/*
Package wercker is a generated protocol buffer package.

It is generated from these files:
	wercker.proto

It has these top-level messages:
	WerckerResponse
	Git
	Result
	Build
	WerckerMessage
*/
package wercker

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Build_Action int32

const (
	Build_BUILD  Build_Action = 0
	Build_DEPLOY Build_Action = 1
)

var Build_Action_name = map[int32]string{
	0: "BUILD",
	1: "DEPLOY",
}
var Build_Action_value = map[string]int32{
	"BUILD":  0,
	"DEPLOY": 1,
}

func (x Build_Action) String() string {
	return proto.EnumName(Build_Action_name, int32(x))
}
func (Build_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type WerckerResponse struct {
	Success bool `protobuf:"varint,100,opt,name=success" json:"success,omitempty"`
}

func (m *WerckerResponse) Reset()                    { *m = WerckerResponse{} }
func (m *WerckerResponse) String() string            { return proto.CompactTextString(m) }
func (*WerckerResponse) ProtoMessage()               {}
func (*WerckerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Git struct {
	Domain     string `protobuf:"bytes,100,opt,name=domain" json:"domain,omitempty"`
	Owner      string `protobuf:"bytes,101,opt,name=owner" json:"owner,omitempty"`
	Repository string `protobuf:"bytes,102,opt,name=repository" json:"repository,omitempty"`
	Branch     string `protobuf:"bytes,103,opt,name=branch" json:"branch,omitempty"`
	Commit     string `protobuf:"bytes,104,opt,name=commit" json:"commit,omitempty"`
}

func (m *Git) Reset()                    { *m = Git{} }
func (m *Git) String() string            { return proto.CompactTextString(m) }
func (*Git) ProtoMessage()               {}
func (*Git) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Result struct {
	Result             bool   `protobuf:"varint,100,opt,name=result" json:"result,omitempty"`
	FailedStepName     string `protobuf:"bytes,101,opt,name=failed_step_name,json=failedStepName" json:"failed_step_name,omitempty"`
	Failed_StepMessage string `protobuf:"bytes,102,opt,name=failed_Step_message,json=failedStepMessage" json:"failed_Step_message,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Build struct {
	Started int64        `protobuf:"varint,100,opt,name=started" json:"started,omitempty"`
	Url     string       `protobuf:"bytes,101,opt,name=url" json:"url,omitempty"`
	User    string       `protobuf:"bytes,102,opt,name=user" json:"user,omitempty"`
	Action  Build_Action `protobuf:"varint,103,opt,name=action,enum=wercker.Build_Action" json:"action,omitempty"`
}

func (m *Build) Reset()                    { *m = Build{} }
func (m *Build) String() string            { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()               {}
func (*Build) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type WerckerMessage struct {
	Url    string  `protobuf:"bytes,100,opt,name=url" json:"url,omitempty"`
	Build  *Build  `protobuf:"bytes,200,opt,name=build" json:"build,omitempty"`
	Result *Result `protobuf:"bytes,201,opt,name=result" json:"result,omitempty"`
	Git    *Git    `protobuf:"bytes,202,opt,name=git" json:"git,omitempty"`
}

func (m *WerckerMessage) Reset()                    { *m = WerckerMessage{} }
func (m *WerckerMessage) String() string            { return proto.CompactTextString(m) }
func (*WerckerMessage) ProtoMessage()               {}
func (*WerckerMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *WerckerMessage) GetBuild() *Build {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *WerckerMessage) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *WerckerMessage) GetGit() *Git {
	if m != nil {
		return m.Git
	}
	return nil
}

func init() {
	proto.RegisterType((*WerckerResponse)(nil), "wercker.WerckerResponse")
	proto.RegisterType((*Git)(nil), "wercker.Git")
	proto.RegisterType((*Result)(nil), "wercker.Result")
	proto.RegisterType((*Build)(nil), "wercker.Build")
	proto.RegisterType((*WerckerMessage)(nil), "wercker.WerckerMessage")
	proto.RegisterEnum("wercker.Build_Action", Build_Action_name, Build_Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for NotificationService service

type NotificationServiceClient interface {
	Notify(ctx context.Context, in *WerckerMessage, opts ...grpc.CallOption) (*WerckerResponse, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) Notify(ctx context.Context, in *WerckerMessage, opts ...grpc.CallOption) (*WerckerResponse, error) {
	out := new(WerckerResponse)
	err := grpc.Invoke(ctx, "/wercker.NotificationService/Notify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NotificationService service

type NotificationServiceServer interface {
	Notify(context.Context, *WerckerMessage) (*WerckerResponse, error)
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WerckerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wercker.NotificationService/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).Notify(ctx, req.(*WerckerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wercker.NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Notify",
			Handler:    _NotificationService_Notify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("wercker.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x52, 0x5d, 0xab, 0xd3, 0x30,
	0x18, 0x3e, 0xa5, 0xae, 0xc7, 0xf3, 0xaa, 0x3d, 0x35, 0xc7, 0x8f, 0xe0, 0x85, 0x93, 0x82, 0x30,
	0x10, 0x7b, 0x31, 0xaf, 0xbd, 0x50, 0x26, 0x22, 0xcc, 0x29, 0x9d, 0x22, 0x5e, 0x8d, 0x2c, 0xcd,
	0xb6, 0x60, 0xdb, 0x94, 0x24, 0x75, 0xcc, 0x5b, 0xff, 0x82, 0xe0, 0x5f, 0x52, 0x7f, 0x95, 0x69,
	0x92, 0x76, 0xce, 0xbb, 0xf7, 0xf9, 0xe8, 0x9b, 0xa7, 0x4f, 0x02, 0xb7, 0xf6, 0x4c, 0xd2, 0x2f,
	0x4c, 0x66, 0x8d, 0x14, 0x5a, 0xa0, 0x73, 0x0f, 0xd3, 0x27, 0x70, 0xf9, 0xc9, 0x8d, 0x39, 0x53,
	0x8d, 0xa8, 0x15, 0x43, 0x18, 0xce, 0x55, 0x4b, 0x29, 0x53, 0x0a, 0x17, 0x8f, 0x82, 0xc9, 0xf5,
	0xbc, 0x87, 0xe9, 0xf7, 0x00, 0xc2, 0xd7, 0x5c, 0xa3, 0x7b, 0x10, 0x15, 0xa2, 0x22, 0xbc, 0xb6,
	0x86, 0x8b, 0xdc, 0x23, 0x74, 0x07, 0x46, 0x62, 0x5f, 0x33, 0x89, 0x99, 0xa5, 0x1d, 0x40, 0x0f,
	0x01, 0x24, 0x6b, 0x84, 0xe2, 0x5a, 0xc8, 0x03, 0xde, 0x58, 0xe9, 0x1f, 0xa6, 0xdb, 0xb6, 0x96,
	0xa4, 0xa6, 0x3b, 0xbc, 0x75, 0xdb, 0x1c, 0xea, 0x78, 0x2a, 0xaa, 0x8a, 0x6b, 0xbc, 0x73, 0xbc,
	0x43, 0xe9, 0x37, 0x88, 0x4c, 0xd6, 0xb6, 0xb4, 0x39, 0xa4, 0x9d, 0x7c, 0x50, 0x8f, 0xd0, 0x04,
	0x92, 0x0d, 0xe1, 0x25, 0x2b, 0x56, 0x4a, 0xb3, 0x66, 0x55, 0x93, 0x8a, 0xf9, 0x48, 0xb1, 0xe3,
	0x97, 0x86, 0x5e, 0x18, 0x16, 0x65, 0x70, 0xe5, 0x9d, 0x1d, 0xb5, 0xaa, 0xcc, 0x5f, 0x92, 0x2d,
	0xf3, 0x21, 0x6f, 0x1f, 0xcd, 0x6f, 0x9d, 0x90, 0xfe, 0x0c, 0x60, 0xf4, 0xb2, 0xe5, 0x65, 0x61,
	0x5b, 0xd2, 0x44, 0x6a, 0x56, 0xd8, 0xc3, 0xc3, 0xbc, 0x87, 0x28, 0x81, 0xb0, 0x95, 0xa5, 0x3f,
	0xb0, 0x1b, 0x11, 0x82, 0x6b, 0xad, 0x32, 0xb5, 0xb8, 0xb5, 0x76, 0x46, 0x4f, 0x21, 0x22, 0x54,
	0x73, 0x51, 0xdb, 0xbf, 0x8e, 0xa7, 0x77, 0xb3, 0xfe, 0x86, 0xec, 0xfe, 0xec, 0x85, 0x15, 0x73,
	0x6f, 0x4a, 0xc7, 0x10, 0x39, 0x06, 0x5d, 0x98, 0x04, 0x1f, 0xdf, 0xcc, 0x67, 0xc9, 0x19, 0x02,
	0x88, 0x66, 0xaf, 0xde, 0xcf, 0xdf, 0x7d, 0x4e, 0x82, 0xf4, 0x47, 0x00, 0xb1, 0xbf, 0x49, 0x1f,
	0xb6, 0x0f, 0x52, 0x1c, 0x83, 0x3c, 0x86, 0xd1, 0xba, 0xdb, 0x8e, 0x7f, 0x05, 0x86, 0xbc, 0x31,
	0x8d, 0x4f, 0x0f, 0xcd, 0x9d, 0x6a, 0xfa, 0xeb, 0x7b, 0xfd, 0xed, 0x7c, 0x97, 0x83, 0xcf, 0x35,
	0x3f, 0x34, 0x3d, 0x86, 0x70, 0x6b, 0x2e, 0xe8, 0x8f, 0xb3, 0xdd, 0x1c, 0x6c, 0xe6, 0x95, 0xe4,
	0x9d, 0x32, 0xfd, 0x00, 0x57, 0x0b, 0xa1, 0xf9, 0x86, 0x53, 0xd2, 0xa5, 0x5f, 0x32, 0xf9, 0x95,
	0x53, 0x86, 0x9e, 0x43, 0x64, 0xe9, 0x03, 0xba, 0x3f, 0x7c, 0x73, 0x9a, 0xfe, 0x01, 0xfe, 0x5f,
	0xe8, 0x1f, 0x68, 0x7a, 0xb6, 0x8e, 0xec, 0x2b, 0x7e, 0xf6, 0x37, 0x00, 0x00, 0xff, 0xff, 0xbf,
	0x15, 0x55, 0xdc, 0xd6, 0x02, 0x00, 0x00,
}
